import java.awt.event.ItemEvent;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

public class formKonversi extends javax.swing.JFrame {

    public formKonversi() {
        initComponents();
        ButtonGroup bg = new ButtonGroup();
        bg.add(rbCelcius);
        bg.add(rbFahrenheit);
        bg.add(rbKelvin);
        bg.add(rbReamur);
        rbCelcius.setSelected(true); // Set default selection jika diinginkan
        // Tambahkan DocumentListener untuk konversi otomatis
        inputSuhu.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                lakukanKonversiOtomatis();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                lakukanKonversiOtomatis();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                lakukanKonversiOtomatis();
            }
        });
    }
                
        // Dari Celsius
    private double celsiusKeFahrenheit(double celsius) {
        return celsius * 9/5 + 32;
    }

    private double celsiusKeKelvin(double celsius) {
        return celsius + 273.15;
    }

    private double celsiusKeReamur(double celsius) {
        return celsius * 4/5;
    }
    
    // Dari Fahrenheit
    private double fahrenheitKeCelsius(double fahrenheit) {
        return (fahrenheit - 32) * 5/9;
    }

    private double fahrenheitKeKelvin(double fahrenheit) {
        return (fahrenheit - 32) * 5/9 + 273.15;
    }

    private double fahrenheitKeReamur(double fahrenheit) {
        return (fahrenheit - 32) * 4/9;
    }

    // Dari Kelvin
    private double kelvinKeCelsius(double kelvin) {
        return kelvin - 273.15;
    }

    private double kelvinKeFahrenheit(double kelvin) {
        return (kelvin - 273.15) * 9/5 + 32;
    }

    private double kelvinKeReamur(double kelvin) {
        return (kelvin - 273.15) * 4/5;
    }

    // Dari Reamur
    private double reamurKeCelsius(double reamur) {
        return reamur * 5/4;
    }

    private double reamurKeFahrenheit(double reamur) {
        return reamur * 9/4 + 32;
    }

    private double reamurKeKelvin(double reamur) {
        return reamur * 5/4 + 273.15;
    }
    
    private void lakukanKonversiOtomatis() {
    // Mengecek apakah input suhu kosong
    if (!inputSuhu.getText().trim().isEmpty()) {
        // Jika tidak kosong, lakukan konversi
        convertButtonActionPerformed(null);
    } else {
        // Jika kosong, kosongkan hasil
        hasilKonversi.setText("");
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        inputSuhu = new javax.swing.JTextField();
        cmbKonversi = new javax.swing.JComboBox<>();
        rbCelcius = new javax.swing.JRadioButton();
        rbFahrenheit = new javax.swing.JRadioButton();
        rbKelvin = new javax.swing.JRadioButton();
        rbReamur = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        hasilKonversi = new javax.swing.JTextField();
        btnClose = new javax.swing.JButton();
        convertButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(120, 157, 188));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "APLIKASI KONVERSI SUHU", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 16), new java.awt.Color(254, 249, 242))); // NOI18N
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(254, 249, 242));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Masukkan angka: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 34, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        inputSuhu.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputSuhuFocusGained(evt);
            }
        });
        inputSuhu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputSuhuKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 59;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(47, 27, 0, 0);
        jPanel1.add(inputSuhu, gridBagConstraints);

        cmbKonversi.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        cmbKonversi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 14;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 88;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(47, 18, 0, 33);
        jPanel1.add(cmbKonversi, gridBagConstraints);

        rbCelcius.setBackground(new java.awt.Color(120, 157, 188));
        rbCelcius.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        rbCelcius.setForeground(new java.awt.Color(254, 249, 242));
        rbCelcius.setText("Celcius ke skala lain");
        rbCelcius.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbCelciusItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 24;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 34, 0, 0);
        jPanel1.add(rbCelcius, gridBagConstraints);

        rbFahrenheit.setBackground(new java.awt.Color(120, 157, 188));
        rbFahrenheit.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        rbFahrenheit.setForeground(new java.awt.Color(254, 249, 242));
        rbFahrenheit.setText("Fahrenheit ke skala lain");
        rbFahrenheit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbFahrenheitItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 34, 0, 0);
        jPanel1.add(rbFahrenheit, gridBagConstraints);

        rbKelvin.setBackground(new java.awt.Color(120, 157, 188));
        rbKelvin.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        rbKelvin.setForeground(new java.awt.Color(254, 249, 242));
        rbKelvin.setText("Kelvin ke skala lain");
        rbKelvin.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbKelvinItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 16;
        gridBagConstraints.ipadx = 23;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 39, 0, 33);
        jPanel1.add(rbKelvin, gridBagConstraints);

        rbReamur.setBackground(new java.awt.Color(120, 157, 188));
        rbReamur.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        rbReamur.setForeground(new java.awt.Color(254, 249, 242));
        rbReamur.setText("Reamur ke skala lain");
        rbReamur.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbReamurItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 16;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 39, 0, 33);
        jPanel1.add(rbReamur, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(254, 249, 242));
        jLabel2.setText("Hasil convert: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 34, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 19;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 251;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 19, 0, 33);
        jPanel1.add(hasilKonversi, gridBagConstraints);

        btnClose.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.ipadx = 51;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 26, 23, 0);
        jPanel1.add(btnClose, gridBagConstraints);

        convertButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        convertButton.setText("Convert");
        convertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        jPanel1.add(convertButton, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
        
    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void rbCelciusItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbCelciusItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            cmbKonversi.removeAllItems();
            cmbKonversi.addItem("Celsius ke Fahrenheit");
            cmbKonversi.addItem("Celsius ke Kelvin");
            cmbKonversi.addItem("Celsius ke Reamur");
        }
    }//GEN-LAST:event_rbCelciusItemStateChanged

    private void rbKelvinItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbKelvinItemStateChanged
         if (evt.getStateChange() == ItemEvent.SELECTED) {
            cmbKonversi.removeAllItems();
            cmbKonversi.addItem("Kelvin ke Celsius");
            cmbKonversi.addItem("Kelvin ke Fahrenheit");
            cmbKonversi.addItem("Kelvin ke Reamur");
        }
    }//GEN-LAST:event_rbKelvinItemStateChanged

    private void rbFahrenheitItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbFahrenheitItemStateChanged
         if (evt.getStateChange() == ItemEvent.SELECTED) {
            cmbKonversi.removeAllItems();
            cmbKonversi.addItem("Fahrenheit ke Celsius");
            cmbKonversi.addItem("Fahrenheit ke Kelvin");
            cmbKonversi.addItem("Fahrenheit ke Reamur");
        }
    }//GEN-LAST:event_rbFahrenheitItemStateChanged

    private void rbReamurItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbReamurItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            cmbKonversi.removeAllItems();
            cmbKonversi.addItem("Reamur ke Celsius");
            cmbKonversi.addItem("Reamur ke Fahrenheit");
            cmbKonversi.addItem("Reamur ke Kelvin");
        }
    }//GEN-LAST:event_rbReamurItemStateChanged

    private void inputSuhuFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputSuhuFocusGained
        inputSuhu.setText("");
    }//GEN-LAST:event_inputSuhuFocusGained

    private void inputSuhuKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputSuhuKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != '.') {
            evt.consume();
        }
    }//GEN-LAST:event_inputSuhuKeyTyped

    private void convertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertButtonActionPerformed
        if (cmbKonversi.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Pilih arah konversi terlebih dahulu.");
            return;
        }
        try {
            double masukkanAngkaSuhu = Double.parseDouble(inputSuhu.getText());
            String pilihanKonversi = (String) cmbKonversi.getSelectedItem();
            double hasil = 0.0;

            if (rbCelcius.isSelected()) {
                switch (pilihanKonversi) {
                    case "Celsius ke Fahrenheit":
                        hasil = celsiusKeFahrenheit(masukkanAngkaSuhu);
                        break;
                    case "Celsius ke Kelvin":
                        hasil = celsiusKeKelvin(masukkanAngkaSuhu);
                        break;
                    case "Celsius ke Reamur":
                        hasil = celsiusKeReamur(masukkanAngkaSuhu);
                        break;
                    default:
                        JOptionPane.showMessageDialog(this, "Pilihan konversi tidak valid!");
                        break;
                }
            } else if (rbFahrenheit.isSelected()) {
                switch (pilihanKonversi) {
                    case "Fahrenheit ke Celsius":
                        hasil = fahrenheitKeCelsius(masukkanAngkaSuhu);
                        break;
                    case "Fahrenheit ke Kelvin":
                        hasil = fahrenheitKeKelvin(masukkanAngkaSuhu);
                        break;
                    case "Fahrenheit ke Reamur":
                        hasil = fahrenheitKeReamur(masukkanAngkaSuhu);
                        break;
                    default:
                        JOptionPane.showMessageDialog(this, "Pilihan konversi tidak valid!");
                        break;
                }
            } else if (rbKelvin.isSelected()) {
                switch (pilihanKonversi) {
                    case "Kelvin ke Celsius":
                        hasil = kelvinKeCelsius(masukkanAngkaSuhu);
                        break;
                    case "Kelvin ke Fahrenheit":
                        hasil = kelvinKeFahrenheit(masukkanAngkaSuhu);
                        break;
                    case "Kelvin ke Reamur":
                        hasil = kelvinKeReamur(masukkanAngkaSuhu);
                        break;
                    default:
                        JOptionPane.showMessageDialog(this, "Pilihan konversi tidak valid!");
                        break;
                }
            } else if (rbReamur.isSelected()) {
                switch (pilihanKonversi) {
                    case "Reamur ke Celsius":
                        hasil = reamurKeCelsius(masukkanAngkaSuhu);
                        break;
                    case "Reamur ke Fahrenheit":
                        hasil = reamurKeFahrenheit(masukkanAngkaSuhu);
                        break;
                    case "Reamur ke Kelvin":
                        hasil = reamurKeKelvin(masukkanAngkaSuhu);
                        break;
                    default:
                        JOptionPane.showMessageDialog(this, "Pilihan konversi tidak valid!");
                        break;
                }
            }

            hasilKonversi.setText(String.valueOf(hasil));
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Mohon masukkan angka yang valid!");
        }
    }//GEN-LAST:event_convertButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formKonversi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formKonversi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formKonversi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formKonversi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formKonversi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JComboBox<String> cmbKonversi;
    private javax.swing.JButton convertButton;
    private javax.swing.JTextField hasilKonversi;
    private javax.swing.JTextField inputSuhu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton rbCelcius;
    private javax.swing.JRadioButton rbFahrenheit;
    private javax.swing.JRadioButton rbKelvin;
    private javax.swing.JRadioButton rbReamur;
    // End of variables declaration//GEN-END:variables
}
